From apache@acm.uva.es Thu Nov  4 19:28:57 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id iA4ISud12568
	for <judge@juez.localnet>; Thu, 4 Nov 2004 19:28:56 +0100
Received: by acm.localnet (Postfix)
	id 9A30B10437; Thu,  4 Nov 2004 19:28:56 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id 98B7710433; Thu,  4 Nov 2004 19:28:56 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 377
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20041104182856.98B7710433@acm.localnet>
Date: Thu,  4 Nov 2004 19:28:56 +0100 (CET)

/* @JUDGE_ID: 34556CP 377 C++ "Submitted by Cd-Man's automatic submission tool ver 0.9" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.80.160.48 - CRC: D796A34 **/
/** Date: 2004-11-04 19:28:56 +0100 **/

@BEGIN_OF_SOURCE_CODE
#include<stdio.h>
//#include<conio.h>

int main()
{
	char str[15];
	int n1[8], n2[8], n3[8];
	int i, j, k, f, t, carry;
//	freopen( "a.in", "r", stdin ); clrscr();

	scanf("%d", &t); getchar();
	printf("COWCULATIONS OUTPUT\n");
	while( t-- )
	{
	gets( str );
	for ( i = 4, j = 0; i >= 0; --i, ++j )
	{
		if ( str[i] == 'V' ) k = 0;
		if ( str[i] == 'U' ) k = 1;
		if ( str[i] == 'C' ) k = 2;
		if ( str[i] == 'D' ) k = 3;
		n1[j] = k;
	}
	n1[5] = n1[6] = n1[7] = 0;

	gets( str );
	for ( i = 4, j = 0; i >= 0; --i, ++j )
	{
		if ( str[i] == 'V' ) k = 0;
		if ( str[i] == 'U' ) k = 1;
		if ( str[i] == 'C' ) k = 2;
		if ( str[i] == 'D' ) k = 3;
		n2[j] = k;
	}
	n2[5] = n2[6] = n2[7] = 0;

//	for ( i = 0; i < 8; ++i ) printf( "%d ", n1[i] );

	k = 3;
	while ( k-- )
	{
		gets( str );
		if ( str[0] == 'L' )
		{
			for ( i = 6; i >= 0; --i )
				n2[i + 1] = n2[i];
			n2[0] = 0;
		}
		if ( str[0] == 'R' )
		{
			for ( i = 1; i <= 4; ++i )
				n2[i - 1] = n2[i];
			n2[4] = 0;
		}
		if ( str[0] == 'A' )
		{
			for ( i = carry = 0; i < 8; ++i )
			{
				j = n1[i] + n2[i] + carry;
				if ( j >= 4 ) { n2[i] = j - 4; carry = 1; }
				else	      { n2[i] = j; carry = 0; }
			}
		}
//		for ( i = 0; i < 8; ++i ) printf( "%d ", n2[i] );
//		printf("\n");
	}

	gets( str );
	for ( i = 7, j = 0; i >= 0; --i, ++j )
	{
		if ( str[i] == 'V' ) k = 0;
		if ( str[i] == 'U' ) k = 1;
		if ( str[i] == 'C' ) k = 2;
		if ( str[i] == 'D' ) k = 3;
		n3[j] = k;
	}

	for ( i = 0, f = 1; i < 8; ++i )
		if ( n2[i] != n3[i] )
		{
			f = 0;
			break;
		}
	if ( f ) printf("YES\n");
	else     printf("NO\n");
	}
	printf("END OF OUTPUT\n");
	return 0;
}
@END_OF_SOURCE_CODE
