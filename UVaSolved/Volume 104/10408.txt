From apache@acm.uva.es Thu Mar 24 20:08:48 2005
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id j2OJ8m402169
	for <judge@juez.localnet>; Thu, 24 Mar 2005 20:08:48 +0100
Received: by acm.localnet (Postfix)
	id DB61611399; Thu, 24 Mar 2005 20:09:43 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id D808B11398; Thu, 24 Mar 2005 20:09:43 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 10408
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20050324190943.D808B11398@acm.localnet>
Date: Thu, 24 Mar 2005 20:09:43 +0100 (CET)

/* @JUDGE_ID: 34556CP 10408 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.80.160.41 - CRC: 258A19C1 **/
/** Date: 2005-03-24 20:09:43 +0100 **/

@BEGIN_OF_SOURCE_CODE
#include <stdio.h>
#include <stdlib.h>

int frac[304200][2];

int GCD( int a, int b )
{
	if ( b == 0 )
		return a;
	return GCD( b, a % b ); 
}

int comp( const void *i, const void *j )
{
	int *p = (int *)i, *q = (int *)j;
	int m, n;
	m = ( *p ) * *( q + 1 );
	n = *( p + 1 ) * *( q );
	return m - n;
}


int main()
{
	int i, j, k, n;

	n = 0;
	for ( i = 1; i <= 1000; ++i )
	{
		if ( i % 2 == 0 )
			k = 2;
		else
			k = 1;
		for ( j = i + 1; j <= 1000; j += k )
			if ( GCD( i, j ) == 1 )
			{
				frac[n][0] = i;
				frac[n][1] = j;
				++n;
			}
	}
	frac[n][0] = frac[n][1] = 1;
	++n;
	//printf ( "%d", n );

	qsort( (void *)frac, n, sizeof( frac[0] ), comp );

	while ( scanf( "%d %d", &n, &k ) != EOF )
	{
		i = j = 0;
		while ( j != k )
			if ( frac[i++][1] <= n )
				++j;
		printf( "%d/%d\n", frac[i - 1][0], frac[i - 1][1] );
	}

	return 0;
}
@END_OF_SOURCE_CODE
