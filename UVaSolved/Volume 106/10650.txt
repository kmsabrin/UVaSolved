From apache@acm.uva.es Wed May  5 11:15:44 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id i459FhW09100
	for <judge@juez.localnet>; Wed, 5 May 2004 11:15:43 +0200
Received: by acm.localnet (Postfix)
	id E887A11447; Wed,  5 May 2004 11:15:43 +0200 (CEST)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id E647611446; Wed,  5 May 2004 11:15:43 +0200 (CEST)
To: judge@acm.uva.es
Subject: Problem 10650
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20040505091543.E647611446@acm.localnet>
Date: Wed,  5 May 2004 11:15:43 +0200 (CEST)

/* @JUDGE_ID: 34556CP 10650 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.22.204.71 - CRC: 1263C39A **/
/** Date: 2004-05-05 11:15:43 +0200 **/

@BEGIN_OF_SOURCE_CODE
#include <stdio.h>

#define MAX 32000

int main(void)
{
	char prime[MAX+1];
	int i, j, store[200][2], index, start, end, dist, count, flg, gap[200], x, y;

	// generate prime numbers
	for(i=2; i<=MAX; i++)
		prime[i] = '1'; // 1 for prime

	for(i=2; i*i<=MAX; i++)
		if(prime[i] == '1')
			for(j=i*i; j<=MAX; j+=i)
				prime[j] = '0'; // 0 for not prime

	// hit the uni-distance prime series
	index = 0;
	for(i=3; i<=MAX; i+=2) {
		if(prime[i] != '1')
			continue;
		start = end = i;
		dist = 0;
		count = 0;
		for(j=i+2; j<=MAX; )
			if(prime[j] == '1') {
				if(!dist) {
					dist = j - start;
					end = j;
					j += 2;
					count++;
				}
				else if(j - end == dist) {
					end = j;
					j += 2;
					count++;
				}
				else break;
			}
			else
				j += 2;

		if(count > 1) {
			store[index][0] = start;
			store[index][1] = end;
			gap[index] = dist;
			index++;
			i = end - 2;
		}
	}

/*	printf("index: %d\n", index);
	for(i=0; i<index; i++) {
		printf("%d %d %d\n", store[i][0], store[i][1], gap[i]);
		getch();
	}
*/
	while(scanf("%d %d", &x, &y) && (x || y)) {
		if(x > y) {
			flg = x;
			x = y;
			y = flg;
		}
		flg = 0;
		for(i = 0; i<index && store[i][0] < y; i++) {
			flg = 0;
			if(store[i][0] >= x && store[i][1] <= y) {
				for(j=store[i][0]; j<=store[i][1]; j+=gap[i])
					if(flg)
						printf(" %d", j);
					else {
						printf("%d", j);
						flg = 1;
					}
				printf("\n");
			}
		}
	   //	if(!flg)
	   //		printf("\n");
	}

	return 0;
}
@END_OF_SOURCE_CODE
