From apache@acm.uva.es Fri Sep 10 04:13:05 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id i8A2D5W00873
	for <judge@juez.localnet>; Fri, 10 Sep 2004 04:13:05 +0200
Received: by acm.localnet (Postfix)
	id 0130F11334; Fri, 10 Sep 2004 04:13:11 +0200 (CEST)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id F1DBD11329; Fri, 10 Sep 2004 04:13:10 +0200 (CEST)
To: judge@acm.uva.es
Subject: Problem 10009
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20040910021310.F1DBD11329@acm.localnet>
Date: Fri, 10 Sep 2004 04:13:10 +0200 (CEST)

/* @JUDGE_ID: 34556CP 10009 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.22.204.115 - CRC: F3A22969 **/
/** Date: 2004-09-10 04:13:10 +0200 **/

@BEGIN_OF_SOURCE_CODE
#include<stdio.h>
//#include<conio.h>

#define MAX 500

int  grid[MAX][MAX], used[MAX], path[MAX], res[MAX];
int index, dest, count, min;

void call(int x)
{
	int i;
	if(x == dest && count < min)
	{
		min = count;
		for(i = 0; i < count; ++i)
			res[i] = path[i];
	}

	for(i = 0; i < index; ++i)
		if(grid[x][i] == 1 || grid[i][x])
			if(used[i] == 0)
			{
				used[i] = 1;
				path[count++] = i;
				call(i);
				used[i] = 0;
				count--;
			}
}

int main()
{
	int m, n, i, x, y, j, k, test, f = 0;
	char t1[20], t2[20], a[MAX];
//	clrscr();
//	freopen("always.in","r",stdin);
	scanf("%d", &test);
	getchar(); getchar();
	while(test--)
	{
	if(f == 1) { printf("\n"); getchar(); } f = 1;
	scanf("%d %d", &m, &n);
	for(i = 0; i < MAX; ++i)
		for(j = 0; j < MAX; ++j)
			grid[i][j] = 0;
	index = 0;
	while(m--)
	{
		scanf("%s %s",t1, t2);
		x = y = -1;
		for(i = 0; i < index; ++i)
		{
			if(a[i] == t1[0])
				x = i;
			if(a[i] == t2[0])
				y = i;
		}
		if(x == -1) { a[index++] = t1[0]; x = index - 1; }
		if(y == -1) { a[index++] = t2[0]; y = index - 1; }
		grid[x][y] = grid[y][x] = 1;
	}
	//for(i = 0; i < index; ++i)
	//	printf("%c ",a[i]);
	//printf("\n");
	for(i = 0; i < n; ++i)
	{
		scanf("%s %s", t1, t2);
		for(j = 0; j < MAX; ++j) res[j] = path[j] = used[j] = 0;
		for(j = 0; j < index; ++j)
		{
			if(a[j] == t1[0])
				x = j;
			if(a[j] == t2[0])
				y = j;
		}
		count = 1;
		dest = y;
		min = MAX;
		used[x] = 1;
		path[0] = x;
		//printf("x = %d y = %d\n", x, y);
		call(x);
		for(j = 0; j < min; ++j)
			printf("%c",a[res[j]]);
		printf("\n");
	}
	}
	return 0;
}
@END_OF_SOURCE_CODE
