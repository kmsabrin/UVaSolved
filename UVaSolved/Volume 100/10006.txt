From apache@acm.uva.es Wed Feb 23 16:41:44 2005
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id j1NFfhl10790
	for <judge@juez.localnet>; Wed, 23 Feb 2005 16:41:43 +0100
Received: by acm.localnet (Postfix)
	id DA593112E9; Wed, 23 Feb 2005 16:41:43 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id D8CCF10B3C; Wed, 23 Feb 2005 16:41:43 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 10006
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20050223154143.D8CCF10B3C@acm.localnet>
Date: Wed, 23 Feb 2005 16:41:43 +0100 (CET)

/* @JUDGE_ID: 34556CP 10006 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.80.160.60 - CRC: 73074F18 **/
/** Date: 2005-02-23 16:41:43 +0100 **/

@BEGIN_OF_SOURCE_CODE
// #include <math.h>

#include <stdio.h>
#include <string.h>

/*
double find_fermat( double B, double P, double M )
{
	double r[40][2], a[40];
	double i, j, k, m, n, t;

	j = 0;
	for ( i = 1; i <= P; i *= 2 )
	{
		r[j][0] = i;
		if ( i == 1 )
			m = fmod( B, M );
		else
			m = fmod( ( m * m ), M );
		r[j][1] = m;
		++j;
	}
	k = j - 1;

	// CHECKED
	//for ( i = 0; i <= k; ++i )
	//	printf( "%d %d\n", r[i][0], r[i][1] );

	t = P; j = 0;
	for ( ; k >= 0 && t; --k )
		if ( t >= r[k][0] )
		{
			a[j++] = r[k][1];
			t -= r[k][0];
		}
	n = j;

	// CHECKED
	// for ( i = 0; i < n; ++i )
	//	printf( "%d + ", a[i] );


	while ( 1 )
	{
		for ( i = j = 0; i < n;  )
		{
			if ( i + 1 == n )
			{
				a[j++] = a[i];
				++i;
			}
			else
			{
				t = a[i] * a[i + 1];
				t = fmod ( t, M );
				a[j++] = t;
				i += 2;
			}
		}
		n = j;
		if ( n == 1 )
			return a[0];
	}
}

long not_prime( long k )
{
	long i, f;
	for ( i = 2; i * i <= k; ++i )
		if ( k % i == 0 )
			return 1;
	return 0;
}

*/

int main()
{

	int i;
	char a[100000];
	memset( a, 0, sizeof( a ) );
	a[561] = a[1105] = a[1729] = a[2465] = a[2821] = 1;
	a[6601] = a[8911] = a[10585] = a[15841] = a[29341] = a[41041] = 1;
	a[46657] = a[52633] = a[62745] = a[63973] = 1;

	while ( scanf( "%d", &i ) && i )
	{
		if ( a[i] )
			printf( "The number %d is a Carmichael number.\n", i );
		else
			printf( "%d is normal.\n", i );
	}


	/*
	long i, j, k, f;

	for ( i = 3; i < 65000; ++i )
	{
		if ( not_prime( i ) )
		{
			f = 1;
			for ( j = 2; j < i; ++j )
			{
				k = find_fermat( j, i, i );
				if ( k != j )
				{
					f = 0;
					break;
				}
			}
			if ( f ) printf( "is carmichael %ld\n", i );
		}
	}
	*/

	return 0;
}


@END_OF_SOURCE_CODE
