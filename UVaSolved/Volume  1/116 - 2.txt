From apache@acm.uva.es Mon Nov 29 18:17:55 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id iATHHtp08986
	for <judge@juez.localnet>; Mon, 29 Nov 2004 18:17:55 +0100
Received: by acm.localnet (Postfix)
	id 35A39115FB; Mon, 29 Nov 2004 18:17:55 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id 32404110AC; Mon, 29 Nov 2004 18:17:55 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 116
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20041129171755.32404110AC@acm.localnet>
Date: Mon, 29 Nov 2004 18:17:55 +0100 (CET)

/* @JUDGE_ID: 34556CP 116 C++ "Submitted by Cd-Man's automatic submission tool ver 0.9" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.80.160.34 - CRC: 33FAE864 **/
/** Date: 2004-11-29 18:17:55 +0100 **/

@BEGIN_OF_SOURCE_CODE
//// BOTTOM UP DP /////


#include <stdio.h>
#include <string.h>
//#include<conio.h>

int a[20][110], b[20][110];
int m, n, d;


int check( int x, int y )
{
	if ( x > 0 && x <= m && y > 0 && y <= n )
		return 1;
	return 0;
}

int Min( int x1, int y1, int x2, int y2, int x3, int y3 )
{
	// d denote destination
	// 1 = up, 2 = forward, 3 = down;

	int i, j, k, flg, low;

	flg = 0;

	if ( check( x1, y1 ) )
	{
		i = a[x1][y1];
		low = i;
		flg = 1;
		d = 1;
	}

	if ( check( x2, y2 ) )
	{
		j = a[x2][y2];
		if ( flg == 0 )
		{
			low = j;
			d = 2;
		}
		else if ( flg && j < low )
		{
			low = j;
			d = 2;
		}
	}

	if ( check( x3, y3 ) )
	{
		k = a[x3][y3];
		if ( flg == 0 )
		{
			low = k;
			d = 3;
		}
		else if ( flg && k < low )
		{
			low = k;
			d = 3;
		}
	}

	return low;
}

int main()
{
	int p, q, min;
	int i, j, k;
//	freopen( "b.in", "r", stdin );
//	freopen( "b.in", "w", stdout );
//	clrscr();

while(scanf( "%d %d", &m, &n ) != EOF )
{

	for ( i = 1; i <= m; ++i )
		for ( j = 1; j <= n; ++j )
			scanf( "%d", &a[i][j] );
	memset ( b, 0, 20 * 110 );


	for ( j = n - 1; j >= 1; --j )
		for ( i = 1; i <= m; ++i )
		{
			if ( i == 1 )
			{
				a[i][j] += Min( i, j + 1, i + 1, j + 1, m, j + 1 );
				if( d == 1 )      b[i][j] = i;
				else if( d == 2 ) b[i][j] = i + 1;
				else if( d == 3 ) b[i][j] = m;
			}
			else if ( i == m )
			{
				a[i][j] += Min( 1, j + 1, i - 1, j + 1, i, j + 1 );
				if( d == 1 )      b[i][j] = 1;
				else if( d == 2 ) b[i][j] = i - 1;
				else if( d == 3 ) b[i][j] = i;
			}
			else
			{
				a[i][j] += Min( i - 1, j + 1, i, j + 1, i + 1, j + 1 );
				if( d == 1 )      b[i][j] = i - 1;
				else if( d == 2 ) b[i][j] = i;
				else if( d == 3 ) b[i][j] = i + 1;
			}
		}

	for ( i = 2, min = a[1][1], k = 1; i <= m; ++i )
		if ( a[i][1] < min )
		{
			min = a[i][1];
			k = i;
		}
	j = k;
	printf( "%d", j );
	for ( i = 1; i < n; ++i )
	{
		j = b[j][i];
		printf(" %d", j );
	}
	printf( "\n%d\n", min );
}

return 0;
}
@END_OF_SOURCE_CODE
