From apache@acm.uva.es Tue Feb 24 18:06:05 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id i1OH64W06582
	for <judge@juez.localnet>; Tue, 24 Feb 2004 18:06:04 +0100
Received: by acm.localnet (Postfix)
	id E06471003A; Tue, 24 Feb 2004 18:06:06 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id DE5B910039; Tue, 24 Feb 2004 18:06:06 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 118
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20040224170606.DE5B910039@acm.localnet>
Date: Tue, 24 Feb 2004 18:06:06 +0100 (CET)

/* @JUDGE_ID: 34556CP 118 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.22.204.55 - CRC: 96736FDD **/
/** Date: 2004-02-24 18:06:06 +0100 **/

@BEGIN_OF_SOURCE_CODE
#include <stdio.h>

int main()
{
	int grid[55][55], lg[50][50], x, y, i, j, mx, my, lost;
	char dir, ins[110];

	for(i=0; i<55; i++)
		for(j=0; j<55; ++j)
			lg[i][j] = 0;
	scanf("%d %d", &mx, &my);
	while(scanf("%d %d %c", &x, &y, &dir) != EOF){
	scanf("%s",ins);
	lost = 0;

	for(i=0; ins[i]; i++)
	{
		if(ins[i] == 'L')
		{
			if     (dir == 'N') dir = 'W';
			else if(dir == 'S') dir = 'E';
			else if(dir == 'E') dir = 'N';
			else                dir = 'S';
		}
		else if(ins[i] == 'R')
		{
			if     (dir == 'N') dir = 'E';
			else if(dir == 'S') dir = 'W';
			else if(dir == 'E') dir = 'S';
			else                dir = 'N';
		}
		else
		{
			if(dir == 'N')
			{
				if(!lg[x][y]) y++;
				else { if((y+1) <= my) y++; }
				if(y > my) { lost = 1; y--; lg[x][y] = 1; break; }
			}
			else if(dir == 'S')
			{
				if(!lg[x][y]) y--;
				else { if((y-1) >= 0) y--; }
				if(y < 0)  { lost = 1; y++; lg[x][y] = 1; break; }
			}
			else if(dir == 'E')
			{
				if(!lg[x][y]) x++;
				else { if((x+1) <= mx) x++; }
				if(x > mx) { lost = 1; x--; lg[x][y] = 1; break; }
			}
			else
			{
				if(!lg[x][y]) x--;
				else { if((x-1) >= 0) x--; }
				if(x < 0) { lost = 1; x++; lg[x][y] = 1; break; }
			}
		}
	}
	if(!lost)
		printf("%d %d %c\n", x, y, dir);
	else
		printf("%d %d %c LOST\n",x, y, dir);
	}
	return 0;
}
@END_OF_SOURCE_CODE
