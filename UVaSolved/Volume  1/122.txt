From apache@acm.uva.es Sun Sep 19 03:41:16 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id i8J1fGW08292
	for <judge@juez.localnet>; Sun, 19 Sep 2004 03:41:16 +0200
Received: by acm.localnet (Postfix)
	id DFE3410F9C; Sun, 19 Sep 2004 03:41:16 +0200 (CEST)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id DDD8210F98; Sun, 19 Sep 2004 03:41:16 +0200 (CEST)
To: judge@acm.uva.es
Subject: Problem 122
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20040919014116.DDD8210F98@acm.localnet>
Date: Sun, 19 Sep 2004 03:41:16 +0200 (CEST)

/* @JUDGE_ID: 34556CP 122 C++ "" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.22.204.106 - CRC: 78E97028 **/
/** Date: 2004-09-19 03:41:16 +0200 **/

@BEGIN_OF_SOURCE_CODE
#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int main()
{
	char str[100000];
	int node[17000], check[17000];
	int i, j, k, x, y, z, f, p;
	for(j = 1, z = 0; j < 17000; ++j) { node[j] = -1; check[j] = 0; }

	while(gets(str))
	{
		p = strlen(str);
		for(i = 0; str[i] && i < p; i++)
		{
			if(str[i] == '(' && str[i + 1] == ')')
			{
				f = 1;
				if(node[1] == -1 || z == 1)
				{
					printf("not complete\n"); f = 0;
				}

				if(f)
				{
				for(j = 1; j < 17000; ++j)
						if(check[j] == 1 && node[j] == -1)
						{
							printf("not complete\n"); f = 0;
						}
				}


				if(f)
				{
					printf("%d", node[1]);
					for(j = 2; j < 17000; ++j)
						if(node[j] != -1)
							printf(" %d", node[j]);
					printf("\n");
				}

				for(j = 1; j < 17000; ++j) { node[j] = -1; check[j] = 0; }
				z = 0;
				break;
			}


			if(str[i] == '(')
			{
				x = atoi(str + i + 1);
				while(str[i] != ',') i++;
				i++;
				y = 1;
				while(str[i] != ')')
				{
					if(str[i] == 'L')
					{
						y += y;
						check[y] = 1;
					}
					if(str[i] == 'R')
					{
						y += y + 1;
						check[y] = 1;
					}
					i++;
				}
				check[y] = 1;
				if(node[y] != -1) z = 1;
				node[y] = x;
			}
		}
	}
	return 0;
}
@END_OF_SOURCE_CODE
