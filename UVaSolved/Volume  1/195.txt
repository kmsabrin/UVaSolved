From apache@acm.uva.es Thu Nov  4 19:28:39 2004
Received: from acm.localnet (web.localnet [192.168.10.200])
	by acm.uva.es (8.11.6/8.11.6) with ESMTP id iA4IScd12368
	for <judge@juez.localnet>; Thu, 4 Nov 2004 19:28:38 +0100
Received: by acm.localnet (Postfix)
	id DABD610433; Thu,  4 Nov 2004 19:28:37 +0100 (CET)
Delivered-To: judge@acm.uva.es
Received: by acm.localnet (Postfix, from userid 81)
	id D8297FF2B; Thu,  4 Nov 2004 19:28:37 +0100 (CET)
To: judge@acm.uva.es
Subject: Problem 195
From: nobody@nobody.acm.uva.es
Reply-To: nobody@nobody.acm.uva.es
Message-Id: <20041104182837.D8297FF2B@acm.localnet>
Date: Thu,  4 Nov 2004 19:28:37 +0100 (CET)

/* @JUDGE_ID: 34556CP 195 C++ "Submitted by Cd-Man's automatic submission tool ver 0.9" */
/** Submited via Valladolid ACM Online Judge Submit page v6.00 **/
/** IP: 202.80.160.48 - CRC: C315135 **/
/** Date: 2004-11-04 19:28:37 +0100 **/

@BEGIN_OF_SOURCE_CODE
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define max 1000

char used[max], str[max], alpha[130];
int  path[max], cond[max], len, n;

int call()
{
	int i;
	if ( len == n )
	{
		for ( i = 0; i < n; ++i )
			printf( "%c", str[path[i]] );
		printf( "\n" );
		return 0;
	}
	for ( i = 0; i < n; ++i )
		if ( !used[i] )
		{
			if ( cond[i] )
				if ( !used[cond[i] - 1] )
					continue;
			used[i] = 1;
			path[len++] = i;
			call();
			used[i] = 0;
			--len;
		}
	return 0;
}

int main()
{
	int i, j, k, t;
	char c;

	for ( i = 65, j = 97, k = 1, t = 1; k <= 26; ++k )
	{
		alpha[i++] = t; alpha[j++] = t + 1;
		t += 2;
	}

	scanf( "%d", &t ); getchar();
	while ( t-- )
	{
		gets( str );
		memset( used, 0, max );
		memset( cond, 0, max * sizeof(int) );

		n = strlen( str );
		for( i = 0; i < n; ++i )
			for ( j = 0; j < n - i - 1; ++j )
				if ( alpha[str[j]] > alpha[str[j + 1]] )
				{
					c = str[j];
					str[j] = str[j + 1];
					str[j + 1 ] = c;
				}

		for ( i = 0; i < n; ++i )
			if ( !cond[i] )
				for ( j = k = i + 1; j < n; ++j )
					if ( str[i] == str[j] )
						cond[j] = k++;
		for ( i = 0; str[i]; ++i )
		{
			if ( cond[i] ) continue;
			used[i] = 1;
			len = 0;
			path[len++] = i;
			call();
			used[i] = 0;
		}
	}
	return 0;
}
@END_OF_SOURCE_CODE
